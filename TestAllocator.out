g++-4.8 -pedantic -std=c++11 -Wall -fprofile-arcs -ftest-coverage TestAllocator.c++ -o TestAllocator -lgtest -lgtest_main -pthread
valgrind ./TestAllocator                                         >  TestAllocator.tmp 2>&1
gcov-4.8 -b TestAllocator.c++ | grep -A 5 "File 'TestAllocator.c++'" >> TestAllocator.tmp
cat TestAllocator.tmp
==24724== Memcheck, a memory error detector
==24724== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==24724== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==24724== Command: ./TestAllocator
==24724== 
Running main() from gtest_main.cc
[==========] Running 29 tests from 11 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (9 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/0 (18 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/1 (8 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = Allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (7 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (2 ms)
[----------] 2 tests from TestAllocator1/2 (9 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = Allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (7 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/3 (10 ms total)

[----------] 4 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (3 ms)
[ RUN      ] TestAllocator2.index1
[       OK ] TestAllocator2.index1 (2 ms)
[ RUN      ] TestAllocator2.index2
[       OK ] TestAllocator2.index2 (3 ms)
[ RUN      ] TestAllocator2.index3
[       OK ] TestAllocator2.index3 (30 ms)
[----------] 4 tests from TestAllocator2 (38 ms total)

[----------] 4 tests from TestAllocate
[ RUN      ] TestAllocate.allocate_1
[       OK ] TestAllocate.allocate_1 (4 ms)
[ RUN      ] TestAllocate.allocate_2
[       OK ] TestAllocate.allocate_2 (5 ms)
[ RUN      ] TestAllocate.allocate_3
[       OK ] TestAllocate.allocate_3 (3 ms)
[ RUN      ] TestAllocate.allocate_4
[       OK ] TestAllocate.allocate_4 (5 ms)
[----------] 4 tests from TestAllocate (17 ms total)

[----------] 3 tests from TestDeallocator
[ RUN      ] TestDeallocator.deallocate_1
[       OK ] TestDeallocator.deallocate_1 (3 ms)
[ RUN      ] TestDeallocator.deallocate_2
[       OK ] TestDeallocator.deallocate_2 (5 ms)
[ RUN      ] TestDeallocator.deallocate_3
[       OK ] TestDeallocator.deallocate_3 (6 ms)
[----------] 3 tests from TestDeallocator (14 ms total)

[----------] 3 tests from TestAbsolute
[ RUN      ] TestAbsolute.abs_1
[       OK ] TestAbsolute.abs_1 (2 ms)
[ RUN      ] TestAbsolute.abs_2
[       OK ] TestAbsolute.abs_2 (1 ms)
[ RUN      ] TestAbsolute.abs_3
[       OK ] TestAbsolute.abs_3 (2 ms)
[----------] 3 tests from TestAbsolute (5 ms total)

[----------] 3 tests from TestValid
[ RUN      ] TestValid.valid_1
[       OK ] TestValid.valid_1 (2 ms)
[ RUN      ] TestValid.valid_2
[       OK ] TestValid.valid_2 (2 ms)
[ RUN      ] TestValid.valid_3
[       OK ] TestValid.valid_3 (2 ms)
[----------] 3 tests from TestValid (7 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = Allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (2 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (5 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = Allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (2 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (2 ms)
[----------] 2 tests from TestAllocator3/1 (5 ms total)

[----------] Global test environment tear-down
[==========] 29 tests from 11 test cases ran. (157 ms total)
[  PASSED  ] 29 tests.
==24724== 
==24724== HEAP SUMMARY:
==24724==     in use at exit: 0 bytes in 0 blocks
==24724==   total heap usage: 1,047 allocs, 1,047 frees, 137,543 bytes allocated
==24724== 
==24724== All heap blocks were freed -- no leaks are possible
==24724== 
==24724== For counts of detected and suppressed errors, rerun with: -v
==24724== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestAllocator.c++'
Lines executed:92.94% of 170
Branches executed:59.03% of 986
Taken at least once:30.73% of 986
Calls executed:48.84% of 1036
Creating 'TestAllocator.c++.gcov'
